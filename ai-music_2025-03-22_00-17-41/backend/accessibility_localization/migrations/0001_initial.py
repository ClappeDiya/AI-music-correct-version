# Generated by Django 4.2.9 on 2025-02-12 17:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_management', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvancedAdaptationSettings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('adaptation_rules', models.JSONField(blank=True, help_text="e.g., {'auto_simplify_language':true,'sign_language_preferred':true,'complexity_threshold':0.8}", null=True, verbose_name='Adaptation Rules')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Advanced Adaptation Setting',
                'verbose_name_plural': 'Advanced Adaptation Settings',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('language_code', models.TextField(help_text="e.g., 'en', 'fr', 'es'", unique=True, verbose_name='Language Code')),
                ('language_name', models.TextField(verbose_name='Language Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='Locale',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('region_code', models.TextField(blank=True, help_text="e.g., 'US', 'FR', 'JP'", null=True, verbose_name='Region Code')),
                ('date_format', models.TextField(blank=True, help_text="e.g., 'MM/DD/YYYY'", null=True, verbose_name='Date Format')),
                ('currency_symbol', models.TextField(blank=True, help_text="e.g., '$', '€', '¥'", null=True, verbose_name='Currency Symbol')),
                ('numeric_format', models.JSONField(blank=True, help_text="e.g., {'decimal_separator':'.','thousand_separator':','}", null=True, verbose_name='Numeric Format')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('language', models.ForeignKey(help_text='The language this locale is associated with', on_delete=django.db.models.deletion.RESTRICT, to='accessibility_localization.language', verbose_name='Language')),
            ],
            options={
                'verbose_name': 'Locale',
                'verbose_name_plural': 'Locales',
                'unique_together': {('language', 'region_code')},
            },
        ),
        migrations.CreateModel(
            name='VoiceSynthesisProfile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('synthesis_params', models.JSONField(blank=True, help_text="e.g., {'voice_pitch':1.2,'speech_rate':0.9,'accent':'British','voice_gender':'female'}", null=True, verbose_name='Synthesis Parameters')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(blank=True, help_text='The user this profile is for, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, to='user_management.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Voice Synthesis Profile',
                'verbose_name_plural': 'Voice Synthesis Profiles',
            },
        ),
        migrations.CreateModel(
            name='LocalizedFormat',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('override_formats', models.JSONField(blank=True, help_text="e.g., {'date_format':'DD/MM/YYYY','currency_symbol':'£'}", null=True, verbose_name='Override Formats')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('locale', models.ForeignKey(help_text='The base locale for these formats', on_delete=django.db.models.deletion.RESTRICT, to='accessibility_localization.locale', verbose_name='Locale')),
                ('user', models.ForeignKey(blank=True, help_text='The user these formats are for, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, to='user_management.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Localized Format',
                'verbose_name_plural': 'Localized Formats',
            },
        ),
        migrations.CreateModel(
            name='BrailleHapticProfile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('profile_data', models.JSONField(blank=True, help_text="e.g., {'braille_patterns':{'A':'⠁','B':'⠃'},'haptic_patterns':{'notification':'long_vibrate'}}", null=True, verbose_name='Profile Data')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(blank=True, help_text='The user this profile is for, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, to='user_management.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Braille/Haptic Profile',
                'verbose_name_plural': 'Braille/Haptic Profiles',
            },
        ),
        migrations.CreateModel(
            name='AccessibilityUsageLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('action_type', models.TextField(help_text="e.g., 'increase_text_size', 'enable_sign_language_overlay'", verbose_name='Action Type')),
                ('context', models.JSONField(blank=True, help_text="e.g., {'previous_setting':'medium','new_setting':'large'}", null=True, verbose_name='Context')),
                ('occurred_at', models.DateTimeField(auto_now_add=True, verbose_name='Occurred At')),
                ('user', models.ForeignKey(blank=True, help_text='The user who performed the action, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, to='user_management.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Accessibility Usage Log',
                'verbose_name_plural': 'Accessibility Usage Logs',
            },
        ),
        migrations.CreateModel(
            name='AccessibilityRecommendation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('recommendation_data', models.JSONField(blank=True, help_text="e.g., {'suggested_changes':{'text_size':'x-large'},'confidence':0.95}", null=True, verbose_name='Recommendation Data')),
                ('generated_at', models.DateTimeField(auto_now_add=True, verbose_name='Generated At')),
                ('user', models.ForeignKey(blank=True, help_text='The user this recommendation is for, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, to='user_management.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Accessibility Recommendation',
                'verbose_name_plural': 'Accessibility Recommendations',
            },
        ),
        migrations.CreateModel(
            name='UserGenrePreferences',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('genre_id', models.BigIntegerField(help_text='The ID of the genre being customized', verbose_name='Genre ID')),
                ('preferred_name', models.TextField(blank=True, help_text="User's preferred name for this genre", null=True, verbose_name='Preferred Name')),
                ('preferred_description', models.TextField(blank=True, help_text="User's preferred description for this genre", null=True, verbose_name='Preferred Description')),
                ('is_shared', models.BooleanField(default=False, help_text='Indicates if this preference is shared with other users', verbose_name='Is Shared')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('shared_by', models.ForeignKey(blank=True, help_text='User who shared this preference, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shared_genre_preferences', to='user_management.user', verbose_name='Shared By')),
                ('user', models.ForeignKey(help_text='The user these preferences belong to', on_delete=django.db.models.deletion.CASCADE, to='user_management.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Genre Preference',
                'verbose_name_plural': 'User Genre Preferences',
                'ordering': ['user__email', 'genre_id'],
                'unique_together': {('user', 'genre_id')},
            },
        ),
        migrations.CreateModel(
            name='UserAccessibilitySettings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('settings', models.JSONField(help_text="e.g., {'text_size':'large','color_contrast':'high','screen_reader_support':true}", verbose_name='Settings')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(help_text='The user these settings belong to', on_delete=django.db.models.deletion.CASCADE, to='user_management.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Accessibility Setting',
                'verbose_name_plural': 'User Accessibility Settings',
                'unique_together': {('user',)},
            },
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('key', models.TextField(help_text="e.g., 'home_page.title'", verbose_name='Key')),
                ('translated_text', models.TextField(verbose_name='Translated Text')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('language', models.ForeignKey(help_text='The language this translation is for', on_delete=django.db.models.deletion.RESTRICT, to='accessibility_localization.language', verbose_name='Language')),
            ],
            options={
                'verbose_name': 'Translation',
                'verbose_name_plural': 'Translations',
                'unique_together': {('key', 'language')},
            },
        ),
        migrations.CreateModel(
            name='SignLanguageAsset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('translation_key', models.TextField(help_text='Link to a translations key to provide sign-language video', verbose_name='Translation Key')),
                ('asset_url', models.TextField(help_text='Link to a sign-language video asset', verbose_name='Asset URL')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('language', models.ForeignKey(help_text='The sign language variant, possibly a pseudo-language code', on_delete=django.db.models.deletion.RESTRICT, to='accessibility_localization.language', verbose_name='Language')),
            ],
            options={
                'verbose_name': 'Sign Language Asset',
                'verbose_name_plural': 'Sign Language Assets',
                'unique_together': {('translation_key', 'language')},
            },
        ),
        migrations.CreateModel(
            name='ScriptLayoutRule',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('layout_data', models.JSONField(help_text="e.g., {'direction':'rtl','fallback_fonts':['NotoSansArabic'],'line_spacing_adjustment':1.1}", verbose_name='Layout Data')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('language', models.ForeignKey(help_text='The language this layout rule is for', on_delete=django.db.models.deletion.RESTRICT, to='accessibility_localization.language', verbose_name='Language')),
            ],
            options={
                'verbose_name': 'Script Layout Rule',
                'verbose_name_plural': 'Script Layout Rules',
                'unique_together': {('language',)},
            },
        ),
        migrations.CreateModel(
            name='GenreLocalization',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('genre_id', models.BigIntegerField(help_text='The ID of the genre being localized', verbose_name='Genre ID')),
                ('localized_name', models.TextField(verbose_name='Localized Name')),
                ('localized_description', models.TextField(blank=True, null=True, verbose_name='Localized Description')),
                ('is_default', models.BooleanField(default=False, help_text='Indicates if this is the default translation for this genre', verbose_name='Is Default')),
                ('fallback_order', models.PositiveSmallIntegerField(default=0, help_text='Order in which translations should be tried as fallbacks', verbose_name='Fallback Order')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('language', models.ForeignKey(help_text='The language this localization is for', on_delete=django.db.models.deletion.RESTRICT, to='accessibility_localization.language', verbose_name='Language')),
            ],
            options={
                'verbose_name': 'Genre Localization',
                'verbose_name_plural': 'Genre Localizations',
                'ordering': ['language__language_code', 'fallback_order'],
                'unique_together': {('genre_id', 'language')},
            },
        ),
        migrations.CreateModel(
            name='CulturalNuance',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('key', models.TextField(help_text="e.g., 'greeting_formal', 'music_instruction_jazz_swing'", verbose_name='Key')),
                ('nuance_data', models.JSONField(help_text="e.g., {'description':'formal greeting in Japanese includes a bow','localized_phrases':['...']}", verbose_name='Nuance Data')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('language', models.ForeignKey(help_text='The language this cultural nuance is for', on_delete=django.db.models.deletion.RESTRICT, to='accessibility_localization.language', verbose_name='Language')),
            ],
            options={
                'verbose_name': 'Cultural Nuance',
                'verbose_name_plural': 'Cultural Nuances',
                'unique_together': {('language', 'key')},
            },
        ),
    ]
