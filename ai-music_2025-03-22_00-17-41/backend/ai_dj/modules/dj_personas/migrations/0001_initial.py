# Generated by Django 4.2.9 on 2025-02-12 21:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ai_dj', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DJPersona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('personality_traits', models.JSONField(default=dict, help_text='Personality characteristics like energy, empathy, humor, etc.')),
                ('music_preferences', models.JSONField(default=dict, help_text='Genre preferences, BPM ranges, key preferences, etc.')),
                ('mixing_style', models.JSONField(default=dict, help_text='Transition preferences, effects usage, mixing techniques')),
                ('interaction_style', models.JSONField(default=dict, help_text='Communication style, response patterns, language tone')),
                ('voice_characteristics', models.JSONField(default=dict, help_text='Voice parameters for TTS and voice modulation')),
                ('expertise_areas', models.JSONField(default=list, help_text='Specialized knowledge in music genres or techniques')),
                ('learning_parameters', models.JSONField(default=dict, help_text='Parameters for adaptive learning and personalization')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'DJ Persona',
                'verbose_name_plural': 'DJ Personas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PersonaBlend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('blend_parameters', models.JSONField(default=dict, help_text='Parameters controlling the persona blend')),
                ('effectiveness_metrics', models.JSONField(default=dict, help_text='Metrics measuring blend effectiveness')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_dj.aidjsession')),
            ],
            options={
                'verbose_name': 'Persona Blend',
                'verbose_name_plural': 'Persona Blends',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PersonaSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('performance_metrics', models.JSONField(default=dict, help_text='Metrics like user engagement, success rate, response time')),
                ('user_feedback', models.JSONField(default=dict, help_text='Aggregated user feedback and ratings')),
                ('session_context', models.JSONField(default=dict, help_text='Environmental and contextual data for the session')),
                ('interaction_log', models.JSONField(default=list, help_text='Detailed log of all interactions and decisions')),
                ('adaptation_history', models.JSONField(default=list, help_text='Record of persona adaptations during session')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_personas.djpersona')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_dj.aidjsession')),
            ],
            options={
                'verbose_name': 'Persona Session',
                'verbose_name_plural': 'Persona Sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='PersonaPreset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('focus', 'Work & Focus'), ('party', 'Party & Social'), ('chill', 'Chill & Relax'), ('workout', 'Workout & Energy'), ('ambient', 'Ambient & Background'), ('creative', 'Creative & Inspirational'), ('gaming', 'Gaming & eSports')], max_length=20)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('settings', models.JSONField(default=dict, help_text='Preset configuration settings')),
                ('usage_context', models.JSONField(default=dict, help_text='Contextual information for preset usage')),
                ('compatibility_data', models.JSONField(default=dict, help_text='Compatibility with different scenarios')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_personas.djpersona')),
            ],
            options={
                'verbose_name': 'Persona Preset',
                'verbose_name_plural': 'Persona Presets',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PersonaInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('chat', 'Chat'), ('command', 'Command'), ('suggestion', 'Suggestion'), ('feedback', 'Feedback'), ('gesture', 'Gesture'), ('voice', 'Voice'), ('emote', 'Emote')], max_length=20)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_response', models.TextField(blank=True, null=True)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('context', models.JSONField(default=dict)),
                ('response_time', models.FloatField(help_text='Response time in seconds', null=True)),
                ('success_rating', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('interaction_metadata', models.JSONField(default=dict, help_text='Additional metadata about the interaction')),
                ('persona_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_personas.personasession')),
            ],
            options={
                'verbose_name': 'Persona Interaction',
                'verbose_name_plural': 'Persona Interactions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PersonaPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_score', models.FloatField()),
                ('interaction_history', models.JSONField(default=list)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_favorite', models.BooleanField(default=False)),
                ('custom_settings', models.JSONField(default=dict)),
                ('preferred_interaction_modes', models.JSONField(default=list, help_text='Preferred ways of interacting with this persona')),
                ('context_specific_preferences', models.JSONField(default=dict, help_text='Preferences for different contexts/situations')),
                ('feedback_history', models.JSONField(default=list, help_text='History of user feedback and ratings')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_personas.djpersona')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Persona Preference',
                'verbose_name_plural': 'Persona Preferences',
                'ordering': ['-preference_score'],
                'unique_together': {('user', 'persona')},
            },
        ),
        migrations.CreateModel(
            name='PersonaBlendComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(help_text='Weight of this persona in the blend (0-1)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('role', models.CharField(help_text='Role of this persona in the blend', max_length=50)),
                ('adaptation_parameters', models.JSONField(default=dict, help_text='Parameters for adapting this component')),
                ('blend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='dj_personas.personablend')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_personas.djpersona')),
            ],
            options={
                'verbose_name': 'Persona Blend Component',
                'verbose_name_plural': 'Persona Blend Components',
                'unique_together': {('blend', 'persona')},
            },
        ),
        migrations.CreateModel(
            name='PersonaAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_period', models.CharField(max_length=50)),
                ('usage_stats', models.JSONField(default=dict)),
                ('performance_metrics', models.JSONField(default=dict)),
                ('user_satisfaction', models.FloatField(blank=True, null=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('interaction_patterns', models.JSONField(default=dict, help_text='Analysis of interaction patterns')),
                ('adaptation_effectiveness', models.JSONField(default=dict, help_text='Analysis of adaptation effectiveness')),
                ('demographic_insights', models.JSONField(default=dict, help_text='Insights based on user demographics')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_personas.djpersona')),
            ],
            options={
                'verbose_name': 'Persona Analytics',
                'verbose_name_plural': 'Persona Analytics',
                'ordering': ['-generated_at'],
                'unique_together': {('persona', 'time_period', 'generated_at')},
            },
        ),
        migrations.CreateModel(
            name='PersonaAdaptation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adaptation_data', models.JSONField(default=dict, help_text='Learned adaptations and personalization data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('effectiveness_score', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('learning_rate', models.FloatField(default=0.1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('adaptation_history', models.JSONField(default=list, help_text='History of adaptations and their effects')),
                ('context_adaptations', models.JSONField(default=dict, help_text='Context-specific adaptations')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_personas.djpersona')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Persona Adaptation',
                'verbose_name_plural': 'Persona Adaptations',
                'ordering': ['-updated_at'],
                'unique_together': {('persona', 'user')},
            },
        ),
    ]
