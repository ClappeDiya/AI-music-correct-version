# Generated by Django 4.2.9 on 2025-02-12 17:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Effect',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True, verbose_name='Effect Name')),
                ('effect_type', models.TextField(blank=True, null=True, verbose_name='Effect Type')),
                ('base_parameters', models.JSONField(blank=True, null=True, verbose_name='Base Parameters')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=True, help_text='Whether this effect is available to all users')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_effects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Effect',
                'verbose_name_plural': 'Effects',
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(help_text='The name of the instrument.', unique=True, verbose_name='Instrument Name')),
                ('instrument_type', models.TextField(blank=True, help_text='The type of instrument (e.g., piano, guitar, synth).', null=True, verbose_name='Instrument Type')),
                ('base_parameters', models.JSONField(blank=True, help_text='Baseline parameter set for the instrument.', null=True, verbose_name='Base Parameters')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_public', models.BooleanField(default=True, help_text='Whether this instrument is available to all users')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_instruments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Instrument',
                'verbose_name_plural': 'Instruments',
            },
        ),
        migrations.CreateModel(
            name='StudioSession',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('session_name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False, help_text='Whether this session is publicly viewable')),
                ('collaborators', models.ManyToManyField(blank=True, help_text='Users who can access this session', related_name='collaborative_sessions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studio_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Studio Session',
                'verbose_name_plural': 'Studio Sessions',
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('track_name', models.TextField(blank=True, null=True)),
                ('track_type', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='virtual_studio.studiosession')),
            ],
            options={
                'verbose_name': 'Track',
                'verbose_name_plural': 'Tracks',
            },
        ),
        migrations.CreateModel(
            name='VrArSetting',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('config', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vr_ar_settings', to='virtual_studio.studiosession')),
            ],
            options={
                'verbose_name': 'VR/AR Setting',
                'verbose_name_plural': 'VR/AR Settings',
            },
        ),
        migrations.CreateModel(
            name='TrackInstrument',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='virtual_studio.instrument')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instruments', to='virtual_studio.track')),
            ],
            options={
                'verbose_name': 'Track Instrument',
                'verbose_name_plural': 'Track Instruments',
            },
        ),
        migrations.CreateModel(
            name='TrackEffect',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('effect', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='virtual_studio.effect')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='effects', to='virtual_studio.track')),
            ],
            options={
                'verbose_name': 'Track Effect',
                'verbose_name_plural': 'Track Effects',
            },
        ),
        migrations.CreateModel(
            name='SessionTemplate',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('template_name', models.TextField()),
                ('template_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session Template',
                'verbose_name_plural': 'Session Templates',
            },
        ),
        migrations.CreateModel(
            name='InstrumentPreset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('preset_name', models.TextField()),
                ('preset_parameters', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=False)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='virtual_studio.instrument')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrument_presets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Instrument Preset',
                'verbose_name_plural': 'Instrument Presets',
            },
        ),
        migrations.CreateModel(
            name='ExportedFile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('file_url', models.TextField()),
                ('format', models.TextField()),
                ('spatial_audio', models.BooleanField(default=False)),
                ('cryptographic_signature', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exported_files', to='virtual_studio.studiosession')),
            ],
            options={
                'verbose_name': 'Exported File',
                'verbose_name_plural': 'Exported Files',
            },
        ),
        migrations.CreateModel(
            name='EffectPreset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('preset_name', models.TextField()),
                ('preset_parameters', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=False)),
                ('effect', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='virtual_studio.effect')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='effect_presets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Effect Preset',
                'verbose_name_plural': 'Effect Presets',
            },
        ),
        migrations.CreateModel(
            name='AiSuggestion',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('suggestion_type', models.TextField(blank=True, null=True)),
                ('suggestion_data', models.JSONField(blank=True, null=True)),
                ('applied', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_suggestions', to='virtual_studio.studiosession')),
            ],
            options={
                'verbose_name': 'AI Suggestion',
                'verbose_name_plural': 'AI Suggestions',
            },
        ),
        migrations.CreateModel(
            name='AdaptiveAutomationEvent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('event_type', models.TextField(blank=True, null=True)),
                ('event_details', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automation_events', to='virtual_studio.studiosession')),
            ],
            options={
                'verbose_name': 'Adaptive Automation Event',
                'verbose_name_plural': 'Adaptive Automation Events',
            },
        ),
    ]
