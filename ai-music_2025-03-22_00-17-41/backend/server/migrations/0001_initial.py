# Generated by Django 4.2.9 on 2025-02-12 21:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DynamicPreference',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('preferences', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='ThemePreference',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('theme', models.CharField(default='light', max_length=50)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text='Collaborative filtering score')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations_given', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-score'],
                'indexes': [models.Index(fields=['created_at'], name='recommendation_created_at_idx'), models.Index(fields=['score'], name='recommendation_score_idx'), models.Index(fields=['user'], name='recommendation_user_idx'), models.Index(fields=['target_user'], name='recommendation_target_user_idx'), models.Index(fields=['user', 'created_at'], name='rec_user_created_idx'), models.Index(fields=['target_user', 'created_at'], name='rec_target_created_idx')],
                'unique_together': {('user', 'target_user')},
            },
        ),
    ]
