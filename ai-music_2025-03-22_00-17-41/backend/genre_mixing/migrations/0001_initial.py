# Generated by Django 4.2.9 on 2025-02-12 17:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('genre_name', models.TextField(help_text='The unique name of the genre.', verbose_name='Genre Name')),
                ('description', models.TextField(blank=True, help_text='A brief description of the genre.', null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the genre was created.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the genre was last updated.', verbose_name='Updated At')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mixing_created_genres', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
                'ordering': ['genre_name'],
            },
        ),
        migrations.CreateModel(
            name='MixingSession',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('session_name', models.TextField(blank=True, help_text='The name of the mixing session.', null=True, verbose_name='Session Name')),
                ('status', models.TextField(default='in_progress', help_text='The status of the mixing session (e.g., in_progress, completed).', verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the mixing session was created.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the mixing session was last updated.', verbose_name='Updated At')),
                ('user', models.ForeignKey(help_text='The user who started the mixing session.', on_delete=django.db.models.deletion.CASCADE, related_name='mixing_sessions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Mixing Session',
                'verbose_name_plural': 'Mixing Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrackReference',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.TextField(verbose_name='Title')),
                ('artist', models.TextField(verbose_name='Artist')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mixing_track_references', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Track Reference',
                'verbose_name_plural': 'Track References',
            },
        ),
        migrations.CreateModel(
            name='MixingOutput',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('audio_file_url', models.TextField(blank=True, help_text='Link to the generated track audio file (S3, GCS, etc.).', null=True, verbose_name='Audio File URL')),
                ('notation_data', models.JSONField(blank=True, help_text='JSON representation of musical structure, chord progressions.', null=True, verbose_name='Notation Data')),
                ('waveform_data', models.JSONField(blank=True, help_text='Waveform info for visualizations.', null=True, verbose_name='Waveform Data')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the output was created.', verbose_name='Created At')),
                ('finalization_timestamp', models.DateTimeField(blank=True, help_text='The date and time when the mixing session was finalized.', null=True, verbose_name='Finalization Timestamp')),
                ('session', models.ForeignKey(help_text='The mixing session this output is associated with.', on_delete=django.db.models.deletion.CASCADE, related_name='mixing_outputs', to='genre_mixing.mixingsession', verbose_name='Mixing Session')),
            ],
            options={
                'verbose_name': 'Mixing Output',
                'verbose_name_plural': 'Mixing Outputs',
            },
        ),
        migrations.CreateModel(
            name='MixingSessionParams',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parameters', models.JSONField(blank=True, help_text='JSONB parameters for the mixing session (e.g., instrument balance, effects).', null=True, verbose_name='Parameters')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the parameters were created.', verbose_name='Created At')),
                ('session', models.ForeignKey(help_text='The mixing session these parameters are associated with.', on_delete=django.db.models.deletion.CASCADE, related_name='session_params', to='genre_mixing.mixingsession', verbose_name='Mixing Session')),
            ],
            options={
                'verbose_name': 'Mixing Session Parameter',
                'verbose_name_plural': 'Mixing Session Parameters',
                'indexes': [models.Index(fields=['parameters'], name='idx_mixing_params')],
            },
        ),
        migrations.CreateModel(
            name='MixingSessionGenre',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('weight', models.DecimalField(decimal_places=2, default=0, help_text='The weight or percentage of the genre in the mix.', max_digits=5, verbose_name='Weight')),
                ('genre', models.ForeignKey(help_text='The genre associated with the mixing session.', on_delete=django.db.models.deletion.RESTRICT, related_name='session_genres', to='genre_mixing.genre', verbose_name='Genre')),
                ('session', models.ForeignKey(help_text='The mixing session this genre is associated with.', on_delete=django.db.models.deletion.CASCADE, related_name='session_genres', to='genre_mixing.mixingsession', verbose_name='Mixing Session')),
            ],
            options={
                'verbose_name': 'Mixing Session Genre',
                'verbose_name_plural': 'Mixing Session Genres',
                'unique_together': {('session', 'genre')},
            },
        ),
        migrations.AddIndex(
            model_name='mixingsession',
            index=models.Index(fields=['user'], name='genre_mixin_user_id_b9b73a_idx'),
        ),
        migrations.AddIndex(
            model_name='mixingsession',
            index=models.Index(fields=['status'], name='genre_mixin_status_e1571b_idx'),
        ),
        migrations.AddIndex(
            model_name='mixingoutput',
            index=models.Index(fields=['notation_data'], name='idx_output_notation'),
        ),
        migrations.AddIndex(
            model_name='mixingoutput',
            index=models.Index(fields=['waveform_data'], name='idx_output_waveform'),
        ),
    ]
