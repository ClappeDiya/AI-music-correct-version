# Generated by Django 4.2.9 on 2025-02-12 17:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DJSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('max_participants', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(50)])),
                ('is_public', models.BooleanField(default=False)),
                ('join_code', models.CharField(max_length=8, unique=True)),
                ('settings', models.JSONField(default=dict)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hosted_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('host', 'Host'), ('co_host', 'Co-Host'), ('participant', 'Participant')], default='participant', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('is_online', models.BooleanField(default=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='multi_user.djsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['joined_at'],
                'unique_together': {('session', 'user')},
            },
        ),
        migrations.CreateModel(
            name='TrackRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_id', models.CharField(max_length=100)),
                ('track_title', models.CharField(max_length=200)),
                ('track_artist', models.CharField(max_length=200)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('playing', 'Playing'), ('played', 'Played')], default='pending', max_length=20)),
                ('played_at', models.DateTimeField(blank=True, null=True)),
                ('position_in_queue', models.IntegerField(blank=True, null=True)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='track_requests', to='multi_user.sessionparticipant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='track_requests', to='multi_user.djsession')),
            ],
            options={
                'ordering': ['position_in_queue', 'requested_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('chat', 'Chat Message'), ('system', 'System Message'), ('request', 'Track Request'), ('vote', 'Vote')], default='chat', max_length=20)),
                ('content', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(default=dict)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='multi_user.sessionparticipant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='multi_user.djsession')),
            ],
            options={
                'ordering': ['sent_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peak_participants', models.IntegerField(default=0)),
                ('total_tracks_played', models.IntegerField(default=0)),
                ('total_votes', models.IntegerField(default=0)),
                ('total_messages', models.IntegerField(default=0)),
                ('average_track_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('most_requested_genres', models.JSONField(default=list)),
                ('participant_engagement', models.JSONField(default=dict)),
                ('session_duration', models.DurationField(blank=True, null=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='multi_user.djsession')),
            ],
        ),
        migrations.CreateModel(
            name='TrackVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.CharField(choices=[('up', 'Upvote'), ('down', 'Downvote')], max_length=4)),
                ('voted_at', models.DateTimeField(auto_now_add=True)),
                ('track_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='multi_user.trackrequest')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='track_votes', to='multi_user.sessionparticipant')),
            ],
            options={
                'unique_together': {('track_request', 'voter')},
            },
        ),
    ]
